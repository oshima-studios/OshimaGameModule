namespace Oshima.FunGame.OshimaServers.Service
{
    public class FunGameOrderList
    {
        public static Dictionary<string, string> ArchiveHelp { get; } = new() {
            {"创建存档", "创建存档，生成随机一个自建角色"},
            {"还原存档", "没有后悔药"},
            {"我的存档", "查看账号/存档信息"},
        };

        public static Dictionary<string, string> CharacterHelp { get; } = new() {
            {"我角色 [序号]", "查看角色简略信息（默认1）"},
            {"我的角色 [序号]", "查看角色详细信息（默认1）"},
            {"设置主战 <序号>", "将指定角色设置为主战"},
            {"我的主战", "查看当前主战角色"},
            {"开启练级 [角色序号]", "启动练级模式"},
            {"练级结算", "收取练级奖励"},
            {"练级信息", "查看练级进度"},
            {"我的状态", "查看主战角色状态"},
            {"装备 <角色序号> <物品序号>", "装备指定物品给角色"},
            {"取消装备 <角色序号> <装备槽序号>", "卸下角色装备（槽位1-6）"},
            {"角色升级 [角色序号]", "提升角色等级（默认1）"},
            {"角色突破 [角色序号]", "突破等级限制（默认1）"},
            {"突破信息 [角色序号]", "查看突破需求（默认1）"},
            {"普攻升级 [角色序号]", "升级普攻等级（默认1）"},
            {"查看普攻升级 [角色序号]", "查看下一次普攻升级信息（默认1）"},
            {"技能升级 <角色序号> <技能名称>", "升级技能等级"},
            {"查看技能升级 <角色序号> <技能名称>", "查看下一次技能升级信息"},
            {"角色重随", "重新随机角色属性"},
            {"角色改名", "修改角色名字"},
            {"我的小队", "查看小队角色名单"},
            {"设置小队 <{序号...}>", "设置小队角色（1-4个参数）"},
            {"小队添加 <序号>", "将角色加入小队"},
            {"小队移除 <序号>", "将角色移出小队"},
            {"小队状态", "查看小队所有角色状态"},
            {"清空小队", "清空所有小队成员"},
            {"生命之泉", "使用金币回复角色状态"},
        };

        public static Dictionary<string, string> ItemHelp { get; } = new() {
            {"我的库存 [页码]", "显示所有库存（角色+物品）"},
            {"我的库存 <类型> [页码]", "按类型查看库存（卡包/武器/防具等）"},
            {"分类库存 <索引> [页码]", "按索引分类查看物品"},
            {"物品库存 [页码]", "显示库存中所有物品"},
            {"角色库存 [页码]", "显示库存中所有角色"},
            {"我的物品 <序号>", "查看指定物品详细信息"},
            {"抽卡/十连抽卡", "金币抽卡（1000/次）"},
            {"材料抽卡/材料十连抽卡", "材料抽卡（5/次）"},
            {"兑换金币 <材料数>", "1材料=200金币"},
            {"使用 <名称> <数量> [角色] [角色序号]", "使用物品（可指定角色）举例：使用大经验书 100 角色1"},
            {"使用 <序号> [角色] [角色序号]", "使用物品（可指定角色）"},
            {"使用魔法卡 <物品序号> <卡包序号>", "使用指定魔法卡"},
            {"合成魔法卡 <{序号...}>", "3张魔法卡合成（空格隔开）"},
            {"分解物品 <{序号...}>", "分解指定物品"},
            {"分解 <名称> <数量>", "分解指定数量物品"},
            {"品质分解 <品质索引>", "按品质分解（0-6）"},
        };

        public static Dictionary<string, string> BattleHelp { get; } = new() {
            {"决斗 <对方UID/昵称>", "和对方切磋（简化版）"},
            {"完整决斗 <对方UID/昵称>", "和对方切磋（完整版）"},
            {"小队决斗 <对方UID/昵称>", "小队切磋"},
            {"查询boss [序号]", "查看boss信息（默认列表）"},
            {"讨伐boss <序号>", "主战角色讨伐指定boss"},
            {"小队讨伐boss <序号>", "小队讨伐指定boss"},
            {"开启练级 [角色序号]", "启动练级模式"},
            {"练级结算", "收取练级奖励，并且回血和复活"},
            {"练级信息", "查看练级进度"},
            {"生命之泉", "使用金币回复角色状态"},
        };

        public static Dictionary<string, string> QuestHelp { get; } = new() {
            {"任务列表", "查看今日任务列表"},
            {"做任务 <序号>", "开始指定任务"},
            {"任务信息", "查看进行中任务详情"},
            {"任务结算", "结算进行中的任务"},
            {"世界地图", "查看当前地图"},
            {"主城", "查看主城信息"},
            {"查地区 <序号>", "查看指定地区信息"},
            {"探索 <地区序号> <{角色序号...}>", "探索指定地区（可多角色）"}
        };

        public static Dictionary<string, string> ClubHelp { get; } = new() {
            {"我的社团", "查看社团信息"},
            {"加入社团 <编号>", "申请加入社团"},
            {"退出社团", "退出当前社团"},
            {"创建社团 <前缀>", "创建一个公开社团，若指令中包含私密一词，将创建私密社团\r\n社团前缀：3-4个字符，允许：英文字母和数字、部分特殊字符"},
            {"查看社团成员", "查看社团成员列表"},
            {"查看社团管理", "查看管理员列表"},
            {"查看申请人列表", "查看申请加入的玩家列表"},
            {"解散社团", "解散当前社团"},
            {"社团批准 <@对方>", "批准加入申请"},
            {"社团拒绝 <@对方>", "拒绝加入申请"},
            {"社团踢出 <@对方>", "踢出社团成员"},
            {"社团转让 <@对方>", "转让社团所有权"},
            {"社团设置 <设置项> <{参数...}>", "修改社团设置"},
        };

        public static Dictionary<string, string> ActivityHelp { get; } = new() {
            {"签到", "每日签到奖励"},
            {"活动", "查看活动中心"},
            {"查活动 <编号>", "查看指定活动详情"},
            {"做活动任务 <活动序号> <任务序号>", "开始指定活动任务"},
        };

        public static Dictionary<string, string> StoreHelp { get; } = new() {
            {"每日商店", "查看每日商店商品"},
            {"商店查看 <序号>", "查看指定商品详情"},
            {"商店购买 <序号>", "购买指定商品"},
        };

        public static IEnumerable<KeyValuePair<string, string>> GetPage(Dictionary<string, string> dict, int page, int pageSize = 10)
        {
            return dict.Skip((page - 1) * pageSize).Take(pageSize);
        }
    }
}
